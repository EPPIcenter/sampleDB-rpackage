[{"path":"https://eppicenter.github.io/sampleDB/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 sampleDB authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Delete--Archive-Samples.html","id":"the-5-status-of-db","dir":"Articles","previous_headings":"","what":"The 5 status’ of DB","title":"Delete and Archive Samples and Controls","text":"sample uploaded SampleDB 5 statuses can : use. (Default). sample must location plate. Exhausted (empty). physical sample tube thrown away sample left. SampleDB, longer needs location plate. SampleDB needs keep Micronix Barcode, Study Subject, Date, StudyCode, SpecimenType can retrospectively link Micronix Barcode sample metadata. user able see empty/ depleted/ whatever term want use clear used future. Bad. physical sample tube thrown away something wrong sample. example, bacterial growth, left room temp, etc. empty sample, SampleDB longer needs location need keep Micronix Barcode, Study Subject, Date, StudyCode, SpecimenType can retrospectively link Micronix Barcode sample metadata. user able see \"bad.” great also include brief description marked bad “comment.” Missing: useful temporary status flag samples found. means final status; missing samples searched status updated. Shipped: cases, samples need distributed labs collaborators. status helps keep track samples sent others.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Delete--Archive-Samples.html","id":"archiving-samples","dir":"Articles","previous_headings":"","what":"Archiving samples","title":"Delete and Archive Samples and Controls","text":"Archiving samples, e.g. changing “Use” Exhausted, Bad, Missing, Shipped: modify status samples, open “Search, Delete & Archive Samples” panel search samples using aforementioned search techniques (plate, study subject ID, barcode, etc. detailed “Search Samples.” completed, select rows table samples wish modify. selected row highlighted light blue. unselect, click highlighted rows. Choose status selected samples “Status” dropdown table. Finally, click panel tab bottom right hand screen press “Archive Samples button. present selected samples review final archival. required enter status samples listed. may optionally add comment selected samples using ”Comment” field. can cancel something look correct clicking outside dialog closing dialog box.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Delete--Archive-Samples.html","id":"deleting-samples-or-plates","dir":"Articles","previous_headings":"","what":"Deleting samples or plates","title":"Delete and Archive Samples and Controls","text":"Delete used sample(s) plate(s) uploaded incorrectly. PERMANENT decision undone used unless fixing upload error. can search samples delete barcode (single, file multiple barcodes) plate name. selected erroneous samples, click panel tab bottom right hand screen press “Delete Samples” button. present selected samples review final deletion. can cancel something look correct clicking outside dialog closing dialog box.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Delete--Archive-Samples.html","id":"delete-archive-controls","dir":"Articles","previous_headings":"","what":"Delete & Archive Controls","title":"Delete and Archive Samples and Controls","text":"process deleting & archiving controls identical samples, exception dried blood spots stored collections individual tube. first identify blood spots want modify (e.g., SheetID & BagName, Composition, Percentage, Density). done, select collection select ‘Archive Samples’ ‘Delete Samples’ samples. dialog appears give numeric input collection update number spots delete archive. done, select ‘Delete’ ‘Archive’ commit changes. deleting spots, decrease number ‘Total’ spots number entered collection. archiving spots, increase number ‘Exhausted’ spots number entered. changes visible next time search collection. Important: archiving spots, option set status, just like samples. ‘Exhausted’ status reserved spot punched, used automatically system extractions recorded. archive spots, automatically put spots ‘Archive’ state assign ‘Status’ set. can find spots using State Status filters search panel.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Move-Micronix-Samples.html","id":"move-micronic-plate-from-one-location-to-another","dir":"Articles","previous_headings":"","what":"Move micronic plate from one location to another","title":"How to Move Samples and Controls","text":"moving samples new plate SampleDB, “Create Container” first. Enter required information create plate. created new plate moved samples new plate, scan new plate upload using “Browse” button “Move Samples” tab.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Controls.html","id":"steps-to-upload-controls","dir":"Articles","previous_headings":"","what":"Steps to upload controls:","title":"How to Upload Controls","text":"record Dry Blood Spot Controls (DBS) Whole Blood (WB) controls. bar, press “Upload Specimens”. says “Choose Upload Type”, select “Controls”. Choose Storage Type (“DBS Sheet” “Whole Blood”) select “Create” Action.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Controls.html","id":"steps-to-upload-dry-blood-spot-sheets-dbs-sheets","dir":"Articles","previous_headings":"","what":"Steps to Upload Dry Blood Spot Sheets (DBS Sheets):","title":"How to Upload Controls","text":"top nav, hit “Upload Specimens”. says “Choose Upload Type”, select “Controls”. Choose “DBS Sheet” Storage Type select “Create” Action.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Controls.html","id":"creating-a-dbs-sheet-upload","dir":"Articles","previous_headings":"Steps to Upload Dry Blood Spot Sheets (DBS Sheets):","what":"Creating a DBS Sheet Upload:","title":"How to Upload Controls","text":"example DBS Sheet Upload. CompositionID: Refers strain types percentages involved (see “Guidelines Controls” ). Find information Update References > Controls. Filter strain percentage. specific identifier “Label” column table. Batch: control batch (see “Guidelines Controls” ) SheetName: sheet identifier. identify sheet dry blood spots . DBS_FreezerName, DBS_BasketName DBS_ShelfName: Location freezer Density: parasitaemia level control. Count: number blood spots added sheet. Comment: optional field leave information DBS Sheet.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Controls.html","id":"validation-for-created-dbs","dir":"Articles","previous_headings":"","what":"Validation for Created DBS:","title":"How to Upload Controls","text":"Uploads checked completeness validity. Composition IDs must exist used. Add references (see Guidelines Controls). Message: Composition IDs found database. Batch must exist used. Add references (see Guidelines Controls). Message: Batch found database Location must exist used. Add references Message: \"following DBS_FreezerName, DBS_ShelfName, /DBS_BasketName found database\"","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Controls.html","id":"uploading-whole-blood-wb-controls","dir":"Articles","previous_headings":"","what":"Uploading Whole Blood (WB) Controls:","title":"How to Upload Controls","text":"Example Whole Blood Upload csv. Density: parasitaemia level control. Use numerical > values use K (k) denote \"thousand\" CompositionID: column, record composition label (see “Guidelines Controls” ). Find going Update     References > Controls. Filter compositions strain percentage. Use ID “Label” column table. Batch: control batch - look like date, must already sample DB (see “Guidelines Controls” ) WB_FreezerName, WB_BasketName WB_ShelfName: Freezer location DBS Bag BoxRow BoxColumn: row column tube within box. BoxName: ID box containing tube. BoxBarcode: optional field barcode can added box, one exists. Comment: optional field user can leave info tube.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Controls.html","id":"validation-for-whole-blood-wb-controls","dir":"Articles","previous_headings":"","what":"Validation for Whole Blood (WB) Controls:","title":"How to Upload Controls","text":"Uploads checked completeness validity. CompositionID must exist Sample DB used. Add references (see Guidelines Controls) Message: Composition IDs found database. Batch must exist Sample DB used. Add references (see “Guidelines Controls” ) Message: Batch found database Whole Blood Cryovial Box Location must exist used. Add > references \"following WB_FreezerName, WB_RackName, /WB_RackPosition found database\" Whole Blood Tubes must uploaded empty (existing!) locations Message: “Uploading sample Cryovial well location already active sample”","code":""},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Extracted-Controls.html","id":"preparing-your-dry-blood-spot-control-extraction-csv","dir":"Articles","previous_headings":"Dry Blood Spot Control Extractions","what":"Preparing your Dry Blood Spot Control-Extraction CSV:","title":"How to Upload Extracted Controls","text":"SampleDB supports recording Dry Blood Spot extractions micronix plates. example CSV six (6) micronix tubes DBS extractions. upload extractions, user select “DBS” “Control Storage Type”, select “Extract” “Action”. columns defined follows: NOTE: Column order matter. Batch: control batch (see “Guidelines Controls”) ControlUID: control exists database want link extraction . UID created automatically sampleDB need looked . can done searching controls “Search” panel using identifying information, e.g. location, composition (strain /percentages). strategy preparing extraction download controls adding remaining columns sheet. Barcode: barcode micronix tube. Row, Column: position micronix tube extraction. PlateName: name micronix plate. PlateBarcode: optional field barcode can added plate, one exists. ExtractedOn: date extraction. SheetName: label sheet DBS Controls sourced . BagLabel: label bag sheet came . DBS_FreezerName, DBS_BasketName DBS_ShelfName: location freezer DBS Control Sheet located. FreezerName, BasketName ShelfName: location freezer micronix plate located.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Extracted-Controls.html","id":"dbs-post-extraction-effects","dir":"Articles","previous_headings":"Dry Blood Spot Control Extractions","what":"DBS Post-Extraction Effects:","title":"How to Upload Extracted Controls","text":"record extraction, collection blood spots linked extraction number ‘Exhausted’ spots updated. number exhausted spots equals total extraction, blood spot collection archived ‘Exhausted’ status. Additionally, text “Automatically archived exhausted” appear reason field.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Extracted-Controls.html","id":"whole-blood-extractions","dir":"Articles","previous_headings":"","what":"Whole Blood Extractions","title":"How to Upload Extracted Controls","text":"SampleDB supports recording whole blood extractions micronix plates.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Extracted-Controls.html","id":"preparing-your-whole-blood-extraction-csv","dir":"Articles","previous_headings":"Whole Blood Extractions","what":"Preparing your Whole Blood Extraction CSV:","title":"How to Upload Extracted Controls","text":"example CSV four (4) whole blood extractions. upload extractions, user select “Whole Blood” “Control Storage Type”, select “Extract” “Action”. columns defined followed: Batch: control batch (see “Guidelines Controls”) ControlUID: control exists database want link extraction . UID created automatically sampleDB need looked . can done searching controls “Search” panel using identifying information, e.g. location, composition (strain /percentages). strategy preparing extraction download controls adding remaining columns sheet. BoxRow, BoxColumn: location whole blood tube control cryovial box. BoxName: id box contains whole blood tube. BoxBarcode: Optional field barcode can added box, one exists. WB_FreezerName, WB_BasketName WB_ShelfName: plates location freezer PlateName: name micronix plate. Row, Column: position micronix tube extraction. Barcode: barcode micronix tube. ExtractedOn: date extraction. NOTE: Column order matter.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/How-to-Upload-Extracted-Controls.html","id":"whole-blood-post-extraction-effects","dir":"Articles","previous_headings":"Whole Blood Extractions","what":"Whole Blood Post-Extraction Effects:","title":"How to Upload Extracted Controls","text":"record extraction, linked whole blood control removed database.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Preferences.html","id":"preferences","dir":"Articles","previous_headings":"","what":"Preferences","title":"Preferences","text":"Traxcer Position Override - default column name “Position” Traxcer scanner CSV may different sampleDB expects. ensure column names align, go “Preferences'' type , e.g. ”Tube Position”, push “Save Preferences.” replace ‘Position’ ‘Tube Position’ expected column, preventing need manually change column name within CSV file. done , SampleDB save preference future. Software Component Version Table - table displays versions external components sampleDB depends . purely informational purposes.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"search-micronix-samples","dir":"Articles","previous_headings":"","what":"Search Micronix Samples","title":"Searching SampleDB","text":"Purpose: search samples find location Micronix plate. can search barcode StudySubject StudySubject/CollectionDate/SpecimenType/Study. can also search plate. like reset search criteria, may clicking “Reset Search Criteria”.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"to-search-by-single-barcode","dir":"Articles","previous_headings":"Search Micronix Samples","what":"To Search by Single Barcode:","title":"Searching SampleDB","text":"Click “Search Samples” Type copy/paste barcode upper right hand ‘Search…’ field table. Search results show window.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"to-search-by-multiple-barcodes","dir":"Articles","previous_headings":"Search Micronix Samples","what":"To search by multiple barcodes:","title":"Searching SampleDB","text":"Create CSV one column called “Barcodes” “Barcode”. Put micronix barcodes searching column. Click “Multiple Barcodes” click “Browse” upload CSV created. Search results show window. Download data needed clicking “Download” button. download csv samples found search.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"to-search-by-plate","dir":"Articles","previous_headings":"Search Micronix Samples","what":"To Search by Plate:","title":"Searching SampleDB","text":"Click “Search, Delete & Archive Samples” Type plate name “Container” field left hand bar. Search results show window can downloaded.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"to-search-by-study-subject","dir":"Articles","previous_headings":"Search Micronix Samples","what":"To Search by Study Subject:","title":"Searching SampleDB","text":"Click “Search, Delete & Archive Samples” Click Sample Type “Micronix” click “Single Study Subject” Type copy/paste Study Subject identifier Search results show window.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"to-search-for-multiple-study-subjects---date-study-specimen-type","dir":"Articles","previous_headings":"Search Micronix Samples","what":"To search for multiple study subject(s) (+/- date, study, specimen type):","title":"Searching SampleDB","text":"Create CSV one column called “StudySubject”. Put study subjects searching column. want search StudySubject CollectionDate, create one column StudySubject data one column linked CollectionDate data. Save CSV. may additionally include SpecimenType /StudyCode column refine search . Click “Search Samples” Click Sample Type “Micronix” click “Multiple Study Subjects” Click “Browse” upload CSV created. Search results show window can downloaded using “Download” button.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"how-to-use-the-advanced-micronix-barcode-search-utility","dir":"Articles","previous_headings":"Search Micronix Samples","what":"How to use the Advanced Micronix Barcode Search Utility:","title":"Searching SampleDB","text":"times, may discover irregularity plate, want know samples plate match position SampleDB database. Advanced Micronix Barcode search allows scan plate return information detailed . Scan plate using micronix plate scanner, output CSV may optionally create CSV file Barcode, Row, Position columns. Ensure file named plate name. Select “Micronix” sample type “Search, Delete & Archive” tab, select “Advanced…” hyperlink. Choose appropriate micronix file type (NA, Traxcer Visionmate). Hit Run Search. issues file upload, error message appear tell columns expected. Inspect results appear run search. can also download file annotations provides additional detail noted #7 . Gray rows indicate passing test. Red rows indicated failing test, number instances triggered failure. following tests performed, display errors: NotFound - sample plate barcode exist SampleDB occur sample uploaded. Consider creating upload file contains sample(s) correct position plate information. IncorrectLocation - sample scanned plate different position plate () recorded sampleDB. occur sample moved plates within plate, move file provided. Consider uploading new move file plate fix error. Archived - sample “archived” status. Use sample status comment fields guide handle . Optionally download file annotations clicking “Download Error Details”. Additional error statuses may see “Correct” “Empty”. confirm sample barcode position matches database scanned file sample exists position, respectively. columns downloaded file follows: CurrentWell - position corresponds plate wells scanned file. always 96 wells \\[A1 - H12\\]. Barcode - micronix barcode sample well scanned file. can NA well empty. Status - can 5 statuses mentioned (NotFound, IncorrectLocation, Archived, Correct, Empty). DBWell - well sample found database. DBPlate - plate sample found database. DBBasket - basket plate (DBPlate) found . DBFreezer - freezer basket (DBBasket) . Study - study sample (Barcode) . ID - study subject linked sample (Barcode). Date - collection date linked sample. may NA. row ‘Empty’ status, columns, excluding CurrentWell Status, NA.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"search-for-cryovials","dir":"Articles","previous_headings":"","what":"Search for Cryovials","title":"Searching SampleDB","text":"Cryovials can searched using filters micronix samples.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"search-controls-dbs-wb","dir":"Articles","previous_headings":"","what":"Search Controls (DBS & WB)","title":"Searching SampleDB","text":"Uploaded Dry Blood Spots Whole Blood tubes can viewed “Search, Archive & Delete” Panel selecting “Controls” “Search Type”. can specify whether search “Dry Blood Spots” “Whole Blood”. either case, able filter controls “Batch”, “Control ID” (generated identifier control), “Composition Type” (number strains), “Strain” “Percentage” (composition). may also search location state status can Samples. search extracted controls, need select “Samples” search option “Search Type”, select “Micronix” “Sample Type”. Currently, uploaded extractions must micronix tubes. can search filtering criteria available micronix samples. Extracted controls tied controls database Control UID Batch. two identifiers, can find exact control extraction derived (vice versa). following go workflows","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"find-the-control-used-in-an-extraction","dir":"Articles","previous_headings":"Search Controls (DBS & WB)","what":"Find the control used in an extraction","title":"Searching SampleDB","text":"Set Search Type Samples Sample Type Micronix. Find extraction (always study subject DNA (DBS) DNA (WB). Save StudySubject, StudyCode SpecimenType information somewhere used search controls. Now set Search Type Controls. Depending SpecimenType, choose Whole Blood (DNA (WB)) DBS Sheet (DNA (DBS)). Find control filtering Batch using recorded StudyCode filtering Control UID using recorded StudySubject.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"find-an-extraction-of-the-control","dir":"Articles","previous_headings":"Search Controls (DBS & WB)","what":"Find an extraction of the control","title":"Searching SampleDB","text":"Set Search Type Controls Sample Type Micronix. Control Type, choose Whole Blood DBS Sheet. Find control using available filters. Save Control UID Batch information somewhere used search extractions. Now set Search Type Samples Sample Type Micronix. Depending control type, filter Specimen Type DNA (DBS) DNA (WB) control dry blood spot whole blood, respectively. Find extracts filtering StudyCode using recorded Batch filtering StudySubject using recorded Control UID.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Searching-SampleDB.html","id":"downloading-your-search-results","dir":"Articles","previous_headings":"","what":"Downloading your search results","title":"Searching SampleDB","text":"may download search results clicking “Download” button table. may optionally choose limit samples included download selecting table first. Important: download works using filters left hand side. work may expect use top right filter. top right filter part table widget. recommendation use filters left need download data. may change future.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Updating-References.html","id":"freezer-names","dir":"Articles","previous_headings":"","what":"Freezer names","title":"Updating References","text":"SampleDB requires freezers entered system samples can uploaded. Every location 3 levels information. top level FreezerName. freezer identifier. second third level can used coordinates identify samples shelf. Every sample need three levels information upload. exact first, second third level information can found database References > Locations. uploading samples, recommended search freezer locations table get exact position information need upload.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Updating-References.html","id":"specimen-types","dir":"Articles","previous_headings":"","what":"Specimen Types","title":"Updating References","text":"Establish add common specimen types References > Specimen Types. Every uploaded sample must associated specimen type. Specimen types easy understand. examples:","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Updating-References.html","id":"adding-a-study","dir":"Articles","previous_headings":"","what":"Adding a study","title":"Updating References","text":"Pick Study Title, Study Description, Lead Person, Study Short Code new study entered SampleDB. adding new studies sure check study already exist, otherwise multiple names study. can different types specimens study use study name. Study title name study, ie. “LLINEUP2” “IMMRSE-U”. study short code need included CSV whenever samples uploaded. example, good study short code PRISM Border Cohort PBC. IMMRSE-U, use IM. LLINEUP2, LN2. study description specific possible, someone unfamiliar study using database understand samples obtained. “IMMRSE-U” described “DBS collected 30 malaria reference centers malaria genomic surveillance 2022-2025”. “LLINEUP2” described “DBS collected repeated cross-sectional surveys 64 sites part cluster-RCT trial bednets 2020-2023”. lead person specific, someone referencing database future, know contact. ***steps must done attempting upload plates study.***","code":""},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/articles/Uploading-Cryovial-Specimens.html","id":"verify-that-the-physical-samples-sample-metadata-align","dir":"Articles","previous_headings":"Steps to Upload Cryovials","what":"Verify that the physical samples & sample metadata align","title":"Uploading Cryovial Specimens","text":"receive shipment, receive manifest contents box. Either scan barcodes, spot checks ensure order aligns map.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Uploading-Cryovial-Specimens.html","id":"build-csv-and-upload","dir":"Articles","previous_headings":"Steps to Upload Cryovials","what":"Build CSV and upload","title":"Uploading Cryovial Specimens","text":"upload interface, choose “Samples” “Choose Upload Type”, “Cryovial” “Sample Storage Type”. Download template selecting “Download” main page Enter information provided headers (refer “Modify CSV file include metadata” information headers). Make sure date format ”YYYY-MM-DD” entries CollectionDate. Finally, save document CSV.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Uploading-Cryovial-Specimens.html","id":"validation-for-cryovials","dir":"Articles","previous_headings":"","what":"Validation for Cryovials","title":"Uploading Cryovial Specimens","text":"Cryovials similar validation checks micronix samples. example, tube placed location existing, active tube. positions must also letters rows - can introduce confusion manifests may use numbers instead, want convert numbers letters. also tests applied unique cryovials place due different constraints cryovials (barcodes may may exist, barcodes may unique, etc.). Additional validation put place ensure cryovial identifiable. following validation tests applied upload cryovial: Barcode uniqueness within box. two tubes within box barcodes, samples flagged. Message: “Cryovial duplicated within box” Box uniqueness. check whether another box exists database similar box uploading. similar, 10% samples must share barcode. box found, samples shared barcodes flagged upload. Message: \"Similarity threshold (10%) exceeded uploaded existing boxes:\\[List boxes 10% barcodes upload\\]\" Check dates present samples part longitudinal study. Samples fail flagged. Message: “Missing collection date found sample longitudinal study” Check study subjects unique within non-longitudinal study. upload contains study subject introduce duplicate database, sample flagged. Message: \"Study subjects must unique studies longitudinal\" Validate study subjects collection dates unique longitudinal study. Message: \"Study subject collection date must unique within longitudinal study\" Confirm cryovials barcode collection dates already sample study subject. ensure identifying information sample subject. Message: \"Sample must collection date barcode provided already sample study subject.\" Validate study, specimen type, locations exist database. subject missing metadata flagged. NOTE: entered already “references” tab. samples flagged, first look make sure data exists database. Messages: \"Study already exists database\" “Specimen Type Reference Validation\" “following FreezerName, RackName, /RackPosition > found database\" Validate cryovials uploaded empty wells. Samples uploaded position shared another cryovial flagged. Message: \"Uploading sample Cryovial well location already active sample\"","code":""},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/articles/Uploading-Micronix-Specimens.html","id":"scan-a-plate","dir":"Articles","previous_headings":"Steps to Upload Micronix Plates","what":"Scan a Plate","title":"Uploading Micronix Specimens","text":"Ensure format Micronix Scanner appropriate; example, metadata A01-A12 format, want scanner scan rows; metadata A01-H01 format, want scanner scan columns Change clicking settings . Align A1 Micronix plate A1 scanner. Scan micronix plate, result .csv file columns follows:","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Uploading-Micronix-Specimens.html","id":"modify-csv-file-to-include-all-specimen-and-logistical-metadata","dir":"Articles","previous_headings":"Steps to Upload Micronix Plates","what":"Modify CSV file to include all Specimen and Logistical Metadata","title":"Uploading Micronix Specimens","text":"Open .csv using Excel CSV editor (ie. ModernCSV). Add new columns: StudyCode, StudySubject, SpecimenType, CollectionDate. columns hold specimen level metadata needed record sample. StudyCode - study associated sample. must match one study codes database already. find study code study, can go References > Studies, search study using Search bar upper right hand corner. code Study Code. StudySubject - unique identifier participant sample study (e.g. cohort ID PRISM Border Cohort). SpecimenType - Must match exactly one specimen types “References” “Specimen Type” panel. Usually plates hold one specimen type. CollectionDate - Date sample collected (date entered SampleDB). Format “YYYY-MM-DD”. Excel, highlight column, right-click “Format Cells” chose “Date,” “Language” chose “English (UK)” “Type” chose “YYYY-MM-DD” longitudinal study need date link sample correct participant/ date, multiple samples different days. use study subject identifier non-longitudinal study (uniquehas unique study subject identifier), date necessary. collection date, always better include . See example (without CollectionDate): collection date sample longitudinal study, use “UNK” “UNKNOWN” placeholder. Longitudinal studies require CollectionDate column. also need include information location plate. Add new columns: FreezerName, ShelfName, BasketName. columns simply provide way identify plate using three levels information can defined lab. simple example may choose define plate locations freezer. FreezerName - name freezer micronix plate go. ShelfName - shelf micronix plate go. BasketName - part shelf samples go.","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Uploading-Micronix-Specimens.html","id":"upload-micronix-tubes-csv","dir":"Articles","previous_headings":"Steps to Upload Micronix Plates","what":"Upload Micronix tubes CSV","title":"Uploading Micronix Specimens","text":"Navigate “Upload Specimens” panel Select “Micronix” “Sample Storage Type” Choose scanner type (Traxcer, Visionmate, NA). Browse CSV. Push “Upload Samples”","code":""},{"path":"https://eppicenter.github.io/sampleDB/articles/Uploading-Micronix-Specimens.html","id":"validation-for-micronix-uploads","dir":"Articles","previous_headings":"","what":"Validation for Micronix Uploads","title":"Uploading Micronix Specimens","text":"soon load file, sample checked series validation functions. validation functions flag samples pass check, block upload happening. happens, see dialog appear provide message failed test, list samples failed particular test. following validation tests applied upload micronix samples: Check micronix barcode uniqueness: micronix barcodes unique. barcode file found database (file), sample flagged: Message: “Micronix barcode already exists database” Validate study, specimen type, locations exist database. subject missing metadata flagged. NOTE: entered already “references” tab. samples flagged, first look make sure data exists database. Messages: \"Study already exists database\" “Specimen Type Reference Validation\" “following FreezerName, ShelfName, /> BasketPosition found database\" Check dates present samples part longitudinal study. Samples fail flagged. Message: “Missing collection date found sample longitudinal study” Check study subjects unique within non-longitudinal study. upload contains study subject introduce duplicate database, sample flagged. Message: \"Study subjects must unique studies longitudinal\" Validate study subjects collection dates unique longitudinal study. Message: \"Study subject collection date must unique within longitudinal study\" Validate micronix uploaded empty wells. Samples uploaded position shared another micronix tube flagged. Message: \"Uploading sample Micronix well location already active sample\"","code":""},{"path":"https://eppicenter.github.io/sampleDB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brian Palmer. Author, maintainer. Severiano Villarruel. Author. EPPIcenter. Funder.","code":""},{"path":"https://eppicenter.github.io/sampleDB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Palmer B, Villarruel S (2024). sampleDB: Organize Wetlab Samples sampleDB. R package version 2.0.0.","code":"@Manual{,   title = {sampleDB: Organize your Wetlab Samples with sampleDB},   author = {Brian Palmer and Severiano Villarruel},   year = {2024},   note = {R package version 2.0.0}, }"},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Organize your Wetlab Samples with sampleDB","text":"SampleDB Management System Wet Lab Samples.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Organize your Wetlab Samples with sampleDB","text":"SampleDB can installed using Docker GitHub.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"docker","dir":"","previous_headings":"Installation","what":"Docker","title":"Organize your Wetlab Samples with sampleDB","text":"preferred way setup sampleDB docker image come dependencies needed run application. Please follow steps ensure setup done correctly.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"id_1-create-a-volume","dir":"","previous_headings":"Installation > Docker","what":"1. Create a volume","title":"Organize your Wetlab Samples with sampleDB","text":"first create volume contain sampleDB database. Start running command :","code":"docker volume create sampledb_database"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"id_2-create-the-image","dir":"","previous_headings":"Installation > Docker","what":"2. Create the image","title":"Organize your Wetlab Samples with sampleDB","text":"two ways obtain sampleDB image. can either pull image DockerHub may build locally. Instructions can found .","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"option-1-pull-from-dockerhub","dir":"","previous_headings":"Installation > Docker > 2. Create the image","what":"Option 1: Pull from DockerHub","title":"Organize your Wetlab Samples with sampleDB","text":"docker image sampleDB can pulled DockerHub. pull DockerHub, run command :","code":"docker pull eppicenter/sampledb:v2.2.0"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"option-2-build-the-image","dir":"","previous_headings":"Installation > Docker > 2. Create the image","what":"Option 2: Build the image","title":"Organize your Wetlab Samples with sampleDB","text":"can build image instead pulling DockerHub. , run following command:","code":"docker build -t eppicenter/sampledb:v2.2.0 ."},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"id_3-create-your-container","dir":"","previous_headings":"Installation > Docker","what":"3. Create your container","title":"Organize your Wetlab Samples with sampleDB","text":"final step. host localhost port 8080 used access application within container, volumes needed run container passed command line. Notice sampleDB database volume also include list volumes.","code":"docker run -d -p 8080:3838 -v /srv/shinyapps/:/srv/shiny-server -v /srv/shinylog/:/var/log/shiny-server -v sampledb_database:/usr/local/share/sampleDB --restart unless-stopped --name sampleDB eppicenter/sampledb:v2.2.0"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"id_4-access-sampledb","dir":"","previous_headings":"Installation > Docker","what":"4. Access sampleDB","title":"Organize your Wetlab Samples with sampleDB","text":"may now access sampleDB browser navigating localhost:8080.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"from-github","dir":"","previous_headings":"Installation","what":"From GitHub","title":"Organize your Wetlab Samples with sampleDB","text":"Please take second review sections installing application.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"hosted-versus-local-application-instances","dir":"","previous_headings":"Installation > From GitHub","what":"Hosted versus local application instances","title":"Organize your Wetlab Samples with sampleDB","text":"sampleDB shiny application can hosted shiny server can run locally. like link application server, must install application site library pathways. Otherwise, okay install package locally (site level) run shiny application using Run_SampleDB().","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"data-availability","dir":"","previous_headings":"Installation > From GitHub","what":"Data availability","title":"Organize your Wetlab Samples with sampleDB","text":"Data access another important consideration, affect installation choice. like users access database, must install using site library pathway. Local installs install data files operating system’s default location user data, therefore prevent users accessing data. System installs place database default location shared application data accessble anyone uses application.","code":""},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"site-install","dir":"","previous_headings":"Installation > From GitHub > Command to setup external environment","what":"Site Install","title":"Organize your Wetlab Samples with sampleDB","text":"install sampleDB site level, can run command using R process elevated privileges: run elevated R process, can run sudo R terminal. can also launch elevated rstudio instance opening terminal running sudo rstudio.","code":"remotes::install_github(     \"https://github.com/EPPIcenter/sampleDB-rpackage\",      ref = \"v2.2.0\",     lib = .libPaths()[1] )"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"local-install","dir":"","previous_headings":"Installation > From GitHub > Command to setup external environment","what":"Local Install","title":"Organize your Wetlab Samples with sampleDB","text":"local install, command sufficient within regular RStudio terminal launch:","code":"remotes::install_github(     \"https://github.com/EPPIcenter/sampleDB-rpackage\",      ref = \"v2.2.0\" )"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"set-up-and-upgrades","dir":"","previous_headings":"Installation","what":"Set Up and Upgrades","title":"Organize your Wetlab Samples with sampleDB","text":"set upgrade sampleDB, run command . previously mentioned, variety ways install application. example output SampleDB_Setup() site install shiny server installed: ✔ indicates successful installation directory file, whereas ✖ indicates process run sucessfully. see ✖ issue linking application shiny server. setup processes always run: Deploying sampleDB Environment runs first, followed Deploying sampleDB Shiny Application. always see processes setup - currently way turn second process.","code":"SampleDB_Setup() ── Deploying sampleDB Environment ────────────────────────────────────────────── ✔ Database location set [/usr/local/share/sampleDB/sampledb_database.sqlite] ✔ Database installed [/usr/local/share/sampleDB/sampledb_database.sqlite] ✔ Subdirectory installed [/usr/local/share/sampleDB/backups] ✔ Subdirectory installed [/usr/local/share/sampleDB/upload_files] ✔ Subdirectory installed [/usr/local/share/sampleDB/move_files] ── Deploying sampleDB Shiny Application ──────────────────────────────────────── ✖ Shiny server is not installed."},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"database-backups","dir":"","previous_headings":"","what":"Database Backups","title":"Organize your Wetlab Samples with sampleDB","text":"database backup time session begins, unless database changed since last backup. recent 10 backups kept. location backup folder can found running SampleDB_Setup() (function overwrite), recommended keep additional copies backups. One easiest ways create backup Backup_SampleDB() function provided package. function default creates backup default backup folder, although may pass filepath backup_dest (e.g. /path//file.backup) overwrite default behavior.","code":""},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"macos-permission-issues","dir":"","previous_headings":"FAQ","what":"MacOS Permission Issues","title":"Organize your Wetlab Samples with sampleDB","text":"working Mac run permission issues, may need run SampleDB elevated permissions. run Rstudio administrator: - Go Applications, right click RStudio Select “Show Package Contents” - Navigate Contents > MacOS, directory see RStudio.exec - Terminal, enter sudo path RStudio.exec (alternatively can drag drop RStudio.exec Terminal). press enter. Example: Now RStudio launch admin access","code":"sudo /Applications/RStudio.app/Contents/MacOS/RStudio"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"i-ran-run_sampledb-but-the-i-see-an-error-message","dir":"","previous_headings":"FAQ","what":"I ran Run_SampleDB() but the I see an error message","title":"Organize your Wetlab Samples with sampleDB","text":"First run SampleDB_Setup(). create database setup dependencies.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"i-installed-the-application-but-i-cannot-upload-files","dir":"","previous_headings":"FAQ","what":"I installed the application but I cannot upload files","title":"Organize your Wetlab Samples with sampleDB","text":"Locations, studies, specimen types need defined first can referenced upload files. can find panels Update References tab.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ArchiveAndDeleteSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"Archive delete wetlab samples.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ArchiveAndDeleteSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"","code":"ArchiveAndDeleteSamples(operation, data, comment, status, verification = TRUE)"},{"path":"https://eppicenter.github.io/sampleDB/reference/ArchiveAndDeleteSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"operation string specifying type operation perform. Valid operations archive delete. archive used delete external data sample (cryovial_tube/paper/rdt information, container information, storage location) preserve internal data (sample id, specimen information, study subject information). operation can used example micronix cryovial_tube emptied rancid needs discarded. delete used remove traces sample (internal external data). Deletions recursive sense sample ids associated samples entire cryovial_box deleted cryovial_box automatically deleted. verification logical value. set TRUE user verification operation required. set false user verification bypassed. Default set TRUE. sample_id numeric vector one sample IDs (also referred storage container IDs). Can accessed using SearchSamples().","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ArchiveAndDeleteSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"","code":"if (FALSE) { ArchiveAndDeleteSamples(operation = \"delete\", sample_id = c(7:10)) ArchiveAndDeleteSamples(operation = \"archive\", sample_id = 100) }"},{"path":"https://eppicenter.github.io/sampleDB/reference/DeleteEmptyContainer.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Empty Wetlab Containers in the EPPIcenter SampleDB database — DeleteEmptyContainer","title":"Delete Empty Wetlab Containers in the EPPIcenter SampleDB database — DeleteEmptyContainer","text":"Delete Empty Wetlab Containers EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/DeleteEmptyContainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Empty Wetlab Containers in the EPPIcenter SampleDB database — DeleteEmptyContainer","text":"","code":"DeleteEmptyContainer(type, container_name, conn)"},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveContainers.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","title":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","text":"Move Wetlab Containers EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveContainers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","text":"","code":"MoveContainers(sample_type, container_name, freezer, conn)"},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveContainers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","text":"sample_type string specifying type samples moved. Options include: micronix, cryovial, rdt paper container_name vector specifying name container moved freezer list specifying vector name, level_I, /orlevel_II","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Wetlab Samples — MoveSamples","title":"Move Wetlab Samples — MoveSamples","text":"MoveSamples() can used move existing wetlab samples : two () existing containers one () existing container one () existing container","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Wetlab Samples — MoveSamples","text":"","code":"MoveSamples(sample_type, move_data)"},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Wetlab Samples — MoveSamples","text":"sample_type string specifying type samples moved. Options include: micronix, cryovial, rdt paper move_data list SampleDB move dataframes, name dataframe item container samples move.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move Wetlab Samples — MoveSamples","text":"","code":"if (FALSE) { move_data <- list(\"move_csv1_container_name\" = dataframe(), \"move_csv2_container_name\" = dataframe()) MoveSamples(sample_type = 1, move_data = move_data) }"},{"path":"https://eppicenter.github.io/sampleDB/reference/ProcessCSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","title":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","text":"Process CSV check appropriate columns data validation.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ProcessCSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","text":"","code":"ProcessCSV(   user_csv,   user_action,   sample_storage_type,   search_type = NULL,   container_name = NULL,   freezer_address = NULL,   file_type = \"na\",   validate = TRUE,   database = Sys.getenv(\"SDB_PATH\"),   config_yml = Sys.getenv(\"SDB_CONFIG\") )"},{"path":"https://eppicenter.github.io/sampleDB/reference/ProcessCSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","text":"user_csv path user file disk user_action action taken. can 'upload', 'move' 'search'. sample_storage_type type storage samples . can '1', '2' '3', identify 'Micronix', 'Cryovial' 'DBS', respectively. container_name Optional parameter specify container samples added . required container name specifed file. freezer_address location container named list list(name=NULL, level_I=NULL, level_II=NULL). required location specified file. file_type file type. usually 'na'. default value 'na'. validate Whether validate data. Setting FALSE skip validation step check file format. Default TRUE. database Path sampleDB database. Default Sys.getenv(\"SDB_PATH\"). config_yml Path user configuration file. Default Sys.getenv(\"SDB_CONFIG\").","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ProcessCSV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","text":"ProcessCSV() creates intermediate dataframe user provided csv can passed UploadSamples MoveSamples:","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ProcessCSV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","text":"","code":"if (FALSE) {  # Format a sample datasheet with micronix samples using the 'na' micronix format that will be added to sampleDB. Add the container name and container location as parameters.  formatted_csv <- ProcessCSV(    user_csv = \"/path/to/sample_data.csv\",    user_action = \"upload\",    file_type = \"na\",    sample_storage_type = \"micronix\",    container_name=\"LN2_XXXX\",    freezer_address=list(name=\"FreezerA\", level_I=\"Shelf1\", level_II=\"BasketC\")   ) }"},{"path":"https://eppicenter.github.io/sampleDB/reference/RenameContainers.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","title":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","text":"Rename Wetlab Containers EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/RenameContainers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","text":"","code":"RenameContainers(sample_type, new_container_name, current_container_name, conn)"},{"path":"https://eppicenter.github.io/sampleDB/reference/RenameContainers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","text":"sample_type string specifying type samples moved. Options include: micronix, cryovial, rdt paper new_container_name vector specifying name container moved current_container_name vector specifying name container moved","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/Run_SampleDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sampleDB as a R Shiny App — Run_SampleDB","title":"Run sampleDB as a R Shiny App — Run_SampleDB","text":"Launch sampleDB R Shiny application.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/Run_SampleDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sampleDB as a R Shiny App — Run_SampleDB","text":"","code":"Run_SampleDB(host = \"0.0.0.0\", port = 3838)"},{"path":"https://eppicenter.github.io/sampleDB/reference/Run_SampleDB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sampleDB as a R Shiny App — Run_SampleDB","text":"","code":"if (FALSE) { RunSampleDB() }"},{"path":"https://eppicenter.github.io/sampleDB/reference/SampleDB_Setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Save SampleDB's database file to a specified location — SampleDB_Setup","title":"Save SampleDB's database file to a specified location — SampleDB_Setup","text":"Save SampleDB's database file specified location","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/SampleDB_Setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save SampleDB's database file to a specified location — SampleDB_Setup","text":"","code":"SampleDB_Setup()"},{"path":"https://eppicenter.github.io/sampleDB/reference/SampleDB_Setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save SampleDB's database file to a specified location — SampleDB_Setup","text":"","code":"if (FALSE) { library(sampleDB) SampleDB_Setup() }"},{"path":"https://eppicenter.github.io/sampleDB/reference/SearchSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"Search wetlab samples.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/SearchSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"","code":"SearchSamples(   sample_storage_type,   filters = NULL,   format = \"na\",   database = Sys.getenv(\"SDB_PATH\"),   config_yml = Sys.getenv(\"SDB_CONFIG\"),   include_internal_sample_id = FALSE )"},{"path":"https://eppicenter.github.io/sampleDB/reference/SearchSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"sample_type string specifying type EPPIcenter sample. (micronix, cryovile, rdt /paper) sample_label list vectors specifying vector micronix, cryovile, rdt, paper label names (micronix.label_name, cryovile.label_name, rdt.label_name /paper.label_name) container_name list vectors specifying vector micronix, cryovile, rdt, paper container names (micronix.container_name, cryovile.container_name, rdt.container_name /paper.container_name) study_subject study subjects string vector study name strings. study_subject.file TRUE path .csv file containing one column named study_subject can uploaded used search database study subjects. specimen_type specimen type string vector specimen type strings. study study short code string vector study short code strings. collection_dates list date values strings (date.date.) can used filter EPPIcenter samples archived logical value. TRUE filters archived samples FALSE filters active samples freezer list specifying vector name, level_I, /orlevel_II return_sample_ids logical value. Setting return_sample_ids TRUE means SearchSamples returns sample ids well search results. Setting return_sample_ids FALSE means SearchSamples returns search results. Default value FALSE.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/SearchSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"","code":"if (FALSE) { SearchSamples(study = \"KAM06\", study_subject = \"subject_1\") }"},{"path":"https://eppicenter.github.io/sampleDB/reference/UpdateReferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Update References in the EPPIcenter SampleDB database — UpdateReferences","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"Update References EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/UpdateReferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"","code":"UpdateReferences(reference, operation, identifier = NULL, update = NULL)"},{"path":"https://eppicenter.github.io/sampleDB/reference/UpdateReferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"reference string specifying type EPPIcenter reference (freezer, specimen_type, study). operation string specifying type update operation perform (add, modify, delete). identifier reference-specific list identifies reference item updated. reference freezer identifier list must include: freezer_name: string specifying freezer name freezer_levelI: string specifying freezer levelI name freezer_levelII: string specifying freezer levelII name reference specimen_type identifier list must include: specimen_type_name: string specifying specimen type name reference study identifier list must include: study_short_code: string specifying study short code update reference-specific list contains reference update information reference freezer update, add operations list must include: freezer_name: string specifying freezer name freezer_type: string specifying freezer type freezer_levelI: string specifying freezer levelI name freezer_levelII: string specifying freezer levelII name reference specimen_type update, add operations list must include: specimen_type_name: string specifying specimen type name reference study update, add operations list must include: study_title: string specifying study title study_description: string specifying study description study_short_code: string specifying study short code study_lead_person: string specifying study lead person study_longitudinal: logical value. TRUE study longitudinal FALSE study longitudinal modify operations update items optional","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/UpdateReferences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"","code":"if (FALSE) { UpdateReferences(reference = \"freezer\", operation = \"add\", update = list(freezer_name = \"Ruth\", freezer_type = \"-80\", freezer_levelI = \"rack1\", freezer_levelII = \"position_C1\")) }"},{"path":"https://eppicenter.github.io/sampleDB/reference/UploadSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload Wetlab Samples — UploadSamples","title":"Upload Wetlab Samples — UploadSamples","text":"UploadSamples() can used upload wetlab samples sampleDB database.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/UploadSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload Wetlab Samples — UploadSamples","text":"","code":"UploadSamples(sample_type_id, upload_data)"},{"path":"https://eppicenter.github.io/sampleDB/reference/UploadSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload Wetlab Samples — UploadSamples","text":"upload_data dataframe SampleDB Upload data. Required upload_data columns :position: row column sample storage housing label: sample's label barcode study_subject_id: StudySubject id subject cohort (ie study) study_short_code: code study specimen_type: sample type collection_date: (optional) date sample first collected cohort StudySubject #' upload data example without collection_date upload data example collection_date sample_type string specifying type samples uploaded Options include: micronix, cryovial dbs container_name string specifying name container samples . Names must unique within sample type. container_barcode string specifying barcode container samples . Container barcodes optional. Barcodes must unique within sample type. freezer_address list specifying freezer address used store samples.  Required items freezer_address list name, level_I level_II. freezer_address type minus eighty level_I level_II items specify rack position, respecively. freezer_address type minus twenty level_I level_II items specify shelf basket, respecively.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/UploadSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload Wetlab Samples — UploadSamples","text":"","code":"if (FALSE) { UploadSamples(sample_type = \"micronix\",               upload_data = tibble(position = c(\"A0\"),                                    label = c(\"XXX 1\"),                                    study_subject_id = c(\"1\"),                                    specimen_type = c(\"PLASMA\"),                                    study_short_code = c(\"KAM06\"),                                    collection_date = c(\"2021-04-10\")),                container_name = \"test_container\",                freezer_address = list(name = \"TBD\",                                       level_I = \"TBD\",                                       level_II = \"seve's working basket\")) }"},{"path":"https://eppicenter.github.io/sampleDB/reference/cryovial_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Cryovial NA — cryovial_na","title":"Cryovial NA — cryovial_na","text":"example upload file single Cryovial sample using NA file format","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/cryovial_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cryovial NA — cryovial_na","text":"","code":"cryovial_na"},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/reference/cryovial_na.html","id":"micronix-na","dir":"Reference","previous_headings":"","what":"micronix_na","title":"Cryovial NA — cryovial_na","text":"data frame 1 rows 13 columns: Barcode 10 digit unique identifier sample BoxRow character denoting row position sample BoxColumn integer denoting column position sample SpecimenType specimen contained sample StudySubject identifier study subject sample collected CollectionDate date sample collected. field required sample part longitudinal study, MUST YYYY-MM-DD format BoxName name plate FreezerName name freezer sample RackNumber shelf sample located RackPosition place shelf sample located StudyCode code associated study sample part Comment optional field leave comment sample BoxBarcode optional field provide barcode container sample located ","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/cryovial_na.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cryovial NA — cryovial_na","text":"EPPIcenter","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/micronix_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Micronix NA — micronix_na","title":"Micronix NA — micronix_na","text":"example upload file single Micronix sample using NA file format","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/micronix_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Micronix NA — micronix_na","text":"","code":"micronix_na"},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/reference/micronix_na.html","id":"micronix-na","dir":"Reference","previous_headings":"","what":"micronix_na","title":"Micronix NA — micronix_na","text":"data frame 1 rows 13 columns: Barcode 10 digit unique identifier sample Row character denoting row position sample Column integer denoting column position sample StudyCode code associated study sample part StudySubject identifier study subject sample collected SpecimenType specimen contained sample PlateName name plate FreezerName name freezer sample ShelfName shelf sample located BasketName place shelf sample located CollectionDate date sample collected. field required sample part longitudinal study, MUST YYYY-MM-DD format Comment optional field leave comment sample PlateBarcode optional field provide barcode container sample located ","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/micronix_na.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Micronix NA — micronix_na","text":"EPPIcenter","code":""}]
