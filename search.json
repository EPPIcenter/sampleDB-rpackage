[{"path":"https://eppicenter.github.io/sampleDB/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 sampleDB authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eppicenter.github.io/sampleDB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brian Palmer. Author, maintainer. Severiano Villarruel. Author. EPPIcenter. Funder.","code":""},{"path":"https://eppicenter.github.io/sampleDB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Palmer B, Villarruel S (2024). sampleDB: Organize Wetlab Samples sampleDB. R package version 2.0.0.","code":"@Manual{,   title = {sampleDB: Organize your Wetlab Samples with sampleDB},   author = {Brian Palmer and Severiano Villarruel},   year = {2024},   note = {R package version 2.0.0}, }"},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Organize your Wetlab Samples with sampleDB","text":"SampleDB Management System Wet Lab Samples.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Organize your Wetlab Samples with sampleDB","text":"SampleDB can installed using Docker GitHub.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"docker","dir":"","previous_headings":"Installation","what":"Docker","title":"Organize your Wetlab Samples with sampleDB","text":"preferred way setup sampleDB docker image come dependencies needed run application. Please follow steps ensure setup done correctly.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"id_1-create-a-volume","dir":"","previous_headings":"Installation > Docker","what":"1. Create a volume","title":"Organize your Wetlab Samples with sampleDB","text":"first create volume contain sampleDB database. Start running command :","code":"docker volume create sampledb_database"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"id_2-create-the-image","dir":"","previous_headings":"Installation > Docker","what":"2. Create the image","title":"Organize your Wetlab Samples with sampleDB","text":"two ways obtain sampleDB image. can either pull image DockerHub may build locally. Instructions can found .","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"option-1-pull-from-dockerhub","dir":"","previous_headings":"Installation > Docker > 2. Create the image","what":"Option 1: Pull from DockerHub","title":"Organize your Wetlab Samples with sampleDB","text":"docker image sampleDB can pulled DockerHub. pull DockerHub, run command :","code":"docker pull eppicenter/sampledb:v2.2.0"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"option-2-build-the-image","dir":"","previous_headings":"Installation > Docker > 2. Create the image","what":"Option 2: Build the image","title":"Organize your Wetlab Samples with sampleDB","text":"can build image instead pulling DockerHub. , run following command:","code":"docker build -t eppicenter/sampledb:v2.2.0 ."},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"id_3-create-your-container","dir":"","previous_headings":"Installation > Docker","what":"3. Create your container","title":"Organize your Wetlab Samples with sampleDB","text":"final step. host localhost port 8080 used access application within container, volumes needed run container passed command line. Notice sampleDB database volume also include list volumes.","code":"docker run -d -p 8080:3838 -v /srv/shinyapps/:/srv/shiny-server -v /srv/shinylog/:/var/log/shiny-server -v sampledb_database:/usr/local/share/sampleDB --restart unless-stopped --name sampleDB eppicenter/sampledb:v2.2.0"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"id_4-access-sampledb","dir":"","previous_headings":"Installation > Docker","what":"4. Access sampleDB","title":"Organize your Wetlab Samples with sampleDB","text":"may now access sampleDB browser navigating localhost:8080.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"from-github","dir":"","previous_headings":"Installation","what":"From GitHub","title":"Organize your Wetlab Samples with sampleDB","text":"Please take second review sections installing application.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"hosted-versus-local-application-instances","dir":"","previous_headings":"Installation > From GitHub","what":"Hosted versus local application instances","title":"Organize your Wetlab Samples with sampleDB","text":"sampleDB shiny application can hosted shiny server can run locally. like link application server, must install application site library pathways. Otherwise, okay install package locally (site level) run shiny application using Run_SampleDB().","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"data-availability","dir":"","previous_headings":"Installation > From GitHub","what":"Data availability","title":"Organize your Wetlab Samples with sampleDB","text":"Data access another important consideration, affect installation choice. like users access database, must install using site library pathway. Local installs install data files operating system’s default location user data, therefore prevent users accessing data. System installs place database default location shared application data accessble anyone uses application.","code":""},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"site-install","dir":"","previous_headings":"Installation > From GitHub > Command to setup external environment","what":"Site Install","title":"Organize your Wetlab Samples with sampleDB","text":"install sampleDB site level, can run command using R process elevated privileges: run elevated R process, can run sudo R terminal. can also launch elevated rstudio instance opening terminal running sudo rstudio.","code":"remotes::install_github(     \"https://github.com/EPPIcenter/sampleDB-rpackage\",      ref = \"v2.2.0\",     lib = .libPaths()[1] )"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"local-install","dir":"","previous_headings":"Installation > From GitHub > Command to setup external environment","what":"Local Install","title":"Organize your Wetlab Samples with sampleDB","text":"local install, command sufficient within regular RStudio terminal launch:","code":"remotes::install_github(     \"https://github.com/EPPIcenter/sampleDB-rpackage\",      ref = \"v2.2.0\" )"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"set-up-and-upgrades","dir":"","previous_headings":"Installation","what":"Set Up and Upgrades","title":"Organize your Wetlab Samples with sampleDB","text":"set upgrade sampleDB, run command . previously mentioned, variety ways install application. example output SampleDB_Setup() site install shiny server installed: ✔ indicates successful installation directory file, whereas ✖ indicates process run sucessfully. see ✖ issue linking application shiny server. setup processes always run: Deploying sampleDB Environment runs first, followed Deploying sampleDB Shiny Application. always see processes setup - currently way turn second process.","code":"SampleDB_Setup() ── Deploying sampleDB Environment ────────────────────────────────────────────── ✔ Database location set [/usr/local/share/sampleDB/sampledb_database.sqlite] ✔ Database installed [/usr/local/share/sampleDB/sampledb_database.sqlite] ✔ Subdirectory installed [/usr/local/share/sampleDB/backups] ✔ Subdirectory installed [/usr/local/share/sampleDB/upload_files] ✔ Subdirectory installed [/usr/local/share/sampleDB/move_files] ── Deploying sampleDB Shiny Application ──────────────────────────────────────── ✖ Shiny server is not installed."},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"database-backups","dir":"","previous_headings":"","what":"Database Backups","title":"Organize your Wetlab Samples with sampleDB","text":"database backup time session begins, unless database changed since last backup. recent 10 backups kept. location backup folder can found running SampleDB_Setup() (function overwrite), recommended keep additional copies backups. One easiest ways create backup Backup_SampleDB() function provided package. function default creates backup default backup folder, although may pass filepath backup_dest (e.g. /path//file.backup) overwrite default behavior.","code":""},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"macos-permission-issues","dir":"","previous_headings":"FAQ","what":"MacOS Permission Issues","title":"Organize your Wetlab Samples with sampleDB","text":"working Mac run permission issues, may need run SampleDB elevated permissions. run Rstudio administrator: - Go Applications, right click RStudio Select “Show Package Contents” - Navigate Contents > MacOS, directory see RStudio.exec - Terminal, enter sudo path RStudio.exec (alternatively can drag drop RStudio.exec Terminal). press enter. Example: Now RStudio launch admin access","code":"sudo /Applications/RStudio.app/Contents/MacOS/RStudio"},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"i-ran-run_sampledb-but-the-i-see-an-error-message","dir":"","previous_headings":"FAQ","what":"I ran Run_SampleDB() but the I see an error message","title":"Organize your Wetlab Samples with sampleDB","text":"First run SampleDB_Setup(). create database setup dependencies.","code":""},{"path":"https://eppicenter.github.io/sampleDB/index.html","id":"i-installed-the-application-but-i-cannot-upload-files","dir":"","previous_headings":"FAQ","what":"I installed the application but I cannot upload files","title":"Organize your Wetlab Samples with sampleDB","text":"Locations, studies, specimen types need defined first can referenced upload files. can find panels Update References tab.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ArchiveAndDeleteSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"Archive delete wetlab samples.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ArchiveAndDeleteSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"","code":"ArchiveAndDeleteSamples(operation, data, comment, status, verification = TRUE)"},{"path":"https://eppicenter.github.io/sampleDB/reference/ArchiveAndDeleteSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"operation string specifying type operation perform. Valid operations archive delete. archive used delete external data sample (cryovial_tube/paper/rdt information, container information, storage location) preserve internal data (sample id, specimen information, study subject information). operation can used example micronix cryovial_tube emptied rancid needs discarded. delete used remove traces sample (internal external data). Deletions recursive sense sample ids associated samples entire cryovial_box deleted cryovial_box automatically deleted. verification logical value. set TRUE user verification operation required. set false user verification bypassed. Default set TRUE. sample_id numeric vector one sample IDs (also referred storage container IDs). Can accessed using SearchSamples().","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ArchiveAndDeleteSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"","code":"if (FALSE) { ArchiveAndDeleteSamples(operation = \"delete\", sample_id = c(7:10)) ArchiveAndDeleteSamples(operation = \"archive\", sample_id = 100) }"},{"path":"https://eppicenter.github.io/sampleDB/reference/DeleteEmptyContainer.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Empty Wetlab Containers in the EPPIcenter SampleDB database — DeleteEmptyContainer","title":"Delete Empty Wetlab Containers in the EPPIcenter SampleDB database — DeleteEmptyContainer","text":"Delete Empty Wetlab Containers EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/DeleteEmptyContainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Empty Wetlab Containers in the EPPIcenter SampleDB database — DeleteEmptyContainer","text":"","code":"DeleteEmptyContainer(type, container_name, conn)"},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveContainers.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","title":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","text":"Move Wetlab Containers EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveContainers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","text":"","code":"MoveContainers(sample_type, container_name, freezer, conn)"},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveContainers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","text":"sample_type string specifying type samples moved. Options include: micronix, cryovial, rdt paper container_name vector specifying name container moved freezer list specifying vector name, level_I, /orlevel_II","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Wetlab Samples — MoveSamples","title":"Move Wetlab Samples — MoveSamples","text":"MoveSamples() can used move existing wetlab samples : two () existing containers one () existing container one () existing container","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Wetlab Samples — MoveSamples","text":"","code":"MoveSamples(sample_type, move_data)"},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Wetlab Samples — MoveSamples","text":"sample_type string specifying type samples moved. Options include: micronix, cryovial, rdt paper move_data list SampleDB move dataframes, name dataframe item container samples move.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/MoveSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move Wetlab Samples — MoveSamples","text":"","code":"if (FALSE) { move_data <- list(\"move_csv1_container_name\" = dataframe(), \"move_csv2_container_name\" = dataframe()) MoveSamples(sample_type = 1, move_data = move_data) }"},{"path":"https://eppicenter.github.io/sampleDB/reference/ProcessCSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","title":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","text":"Process CSV check appropriate columns data validation.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ProcessCSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","text":"","code":"ProcessCSV(   user_csv,   user_action,   sample_storage_type,   search_type = NULL,   container_name = NULL,   freezer_address = NULL,   file_type = \"na\",   validate = TRUE,   database = Sys.getenv(\"SDB_PATH\"),   config_yml = Sys.getenv(\"SDB_CONFIG\") )"},{"path":"https://eppicenter.github.io/sampleDB/reference/ProcessCSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","text":"user_csv path user file disk user_action action taken. can 'upload', 'move' 'search'. sample_storage_type type storage samples . can '1', '2' '3', identify 'Micronix', 'Cryovial' 'DBS', respectively. container_name Optional parameter specify container samples added . required container name specifed file. freezer_address location container named list list(name=NULL, level_I=NULL, level_II=NULL). required location specified file. file_type file type. usually 'na'. default value 'na'. validate Whether validate data. Setting FALSE skip validation step check file format. Default TRUE. database Path sampleDB database. Default Sys.getenv(\"SDB_PATH\"). config_yml Path user configuration file. Default Sys.getenv(\"SDB_CONFIG\").","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ProcessCSV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","text":"ProcessCSV() creates intermediate dataframe user provided csv can passed UploadSamples MoveSamples:","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/ProcessCSV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks the format of a csv file and validates the data given sample type and file type parameters — ProcessCSV","text":"","code":"if (FALSE) {  # Format a sample datasheet with micronix samples using the 'na' micronix format that will be added to sampleDB. Add the container name and container location as parameters.  formatted_csv <- ProcessCSV(    user_csv = \"/path/to/sample_data.csv\",    user_action = \"upload\",    file_type = \"na\",    sample_storage_type = \"micronix\",    container_name=\"LN2_XXXX\",    freezer_address=list(name=\"FreezerA\", level_I=\"Shelf1\", level_II=\"BasketC\")   ) }"},{"path":"https://eppicenter.github.io/sampleDB/reference/RenameContainers.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","title":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","text":"Rename Wetlab Containers EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/RenameContainers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","text":"","code":"RenameContainers(sample_type, new_container_name, current_container_name, conn)"},{"path":"https://eppicenter.github.io/sampleDB/reference/RenameContainers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","text":"sample_type string specifying type samples moved. Options include: micronix, cryovial, rdt paper new_container_name vector specifying name container moved current_container_name vector specifying name container moved","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/Run_SampleDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sampleDB as a R Shiny App — Run_SampleDB","title":"Run sampleDB as a R Shiny App — Run_SampleDB","text":"Launch sampleDB R Shiny application.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/Run_SampleDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sampleDB as a R Shiny App — Run_SampleDB","text":"","code":"Run_SampleDB(host = \"0.0.0.0\", port = 3838)"},{"path":"https://eppicenter.github.io/sampleDB/reference/Run_SampleDB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sampleDB as a R Shiny App — Run_SampleDB","text":"","code":"if (FALSE) { RunSampleDB() }"},{"path":"https://eppicenter.github.io/sampleDB/reference/SampleDB_Setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Save SampleDB's database file to a specified location — SampleDB_Setup","title":"Save SampleDB's database file to a specified location — SampleDB_Setup","text":"Save SampleDB's database file specified location","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/SampleDB_Setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save SampleDB's database file to a specified location — SampleDB_Setup","text":"","code":"SampleDB_Setup()"},{"path":"https://eppicenter.github.io/sampleDB/reference/SampleDB_Setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save SampleDB's database file to a specified location — SampleDB_Setup","text":"","code":"if (FALSE) { library(sampleDB) SampleDB_Setup() }"},{"path":"https://eppicenter.github.io/sampleDB/reference/SearchSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"Search wetlab samples.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/SearchSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"","code":"SearchSamples(   sample_storage_type,   filters = NULL,   format = \"na\",   database = Sys.getenv(\"SDB_PATH\"),   config_yml = Sys.getenv(\"SDB_CONFIG\"),   include_internal_sample_id = FALSE )"},{"path":"https://eppicenter.github.io/sampleDB/reference/SearchSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"sample_type string specifying type EPPIcenter sample. (micronix, cryovile, rdt /paper) sample_label list vectors specifying vector micronix, cryovile, rdt, paper label names (micronix.label_name, cryovile.label_name, rdt.label_name /paper.label_name) container_name list vectors specifying vector micronix, cryovile, rdt, paper container names (micronix.container_name, cryovile.container_name, rdt.container_name /paper.container_name) study_subject study subjects string vector study name strings. study_subject.file TRUE path .csv file containing one column named study_subject can uploaded used search database study subjects. specimen_type specimen type string vector specimen type strings. study study short code string vector study short code strings. collection_dates list date values strings (date.date.) can used filter EPPIcenter samples archived logical value. TRUE filters archived samples FALSE filters active samples freezer list specifying vector name, level_I, /orlevel_II return_sample_ids logical value. Setting return_sample_ids TRUE means SearchSamples returns sample ids well search results. Setting return_sample_ids FALSE means SearchSamples returns search results. Default value FALSE.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/SearchSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"","code":"if (FALSE) { SearchSamples(study = \"KAM06\", study_subject = \"subject_1\") }"},{"path":"https://eppicenter.github.io/sampleDB/reference/UpdateReferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Update References in the EPPIcenter SampleDB database — UpdateReferences","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"Update References EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/UpdateReferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"","code":"UpdateReferences(reference, operation, identifier = NULL, update = NULL)"},{"path":"https://eppicenter.github.io/sampleDB/reference/UpdateReferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"reference string specifying type EPPIcenter reference (freezer, specimen_type, study). operation string specifying type update operation perform (add, modify, delete). identifier reference-specific list identifies reference item updated. reference freezer identifier list must include: freezer_name: string specifying freezer name freezer_levelI: string specifying freezer levelI name freezer_levelII: string specifying freezer levelII name reference specimen_type identifier list must include: specimen_type_name: string specifying specimen type name reference study identifier list must include: study_short_code: string specifying study short code update reference-specific list contains reference update information reference freezer update, add operations list must include: freezer_name: string specifying freezer name freezer_type: string specifying freezer type freezer_levelI: string specifying freezer levelI name freezer_levelII: string specifying freezer levelII name reference specimen_type update, add operations list must include: specimen_type_name: string specifying specimen type name reference study update, add operations list must include: study_title: string specifying study title study_description: string specifying study description study_short_code: string specifying study short code study_lead_person: string specifying study lead person study_longitudinal: logical value. TRUE study longitudinal FALSE study longitudinal modify operations update items optional","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/UpdateReferences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"","code":"if (FALSE) { UpdateReferences(reference = \"freezer\", operation = \"add\", update = list(freezer_name = \"Ruth\", freezer_type = \"-80\", freezer_levelI = \"rack1\", freezer_levelII = \"position_C1\")) }"},{"path":"https://eppicenter.github.io/sampleDB/reference/UploadSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload Wetlab Samples — UploadSamples","title":"Upload Wetlab Samples — UploadSamples","text":"UploadSamples() can used upload wetlab samples sampleDB database.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/UploadSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload Wetlab Samples — UploadSamples","text":"","code":"UploadSamples(sample_type_id, upload_data)"},{"path":"https://eppicenter.github.io/sampleDB/reference/UploadSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload Wetlab Samples — UploadSamples","text":"upload_data dataframe SampleDB Upload data. Required upload_data columns :position: row column sample storage housing label: sample's label barcode study_subject_id: StudySubject id subject cohort (ie study) study_short_code: code study specimen_type: sample type collection_date: (optional) date sample first collected cohort StudySubject #' upload data example without collection_date upload data example collection_date sample_type string specifying type samples uploaded Options include: micronix, cryovial dbs container_name string specifying name container samples . Names must unique within sample type. container_barcode string specifying barcode container samples . Container barcodes optional. Barcodes must unique within sample type. freezer_address list specifying freezer address used store samples.  Required items freezer_address list name, level_I level_II. freezer_address type minus eighty level_I level_II items specify rack position, respecively. freezer_address type minus twenty level_I level_II items specify shelf basket, respecively.","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/UploadSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload Wetlab Samples — UploadSamples","text":"","code":"if (FALSE) { UploadSamples(sample_type = \"micronix\",               upload_data = tibble(position = c(\"A0\"),                                    label = c(\"XXX 1\"),                                    study_subject_id = c(\"1\"),                                    specimen_type = c(\"PLASMA\"),                                    study_short_code = c(\"KAM06\"),                                    collection_date = c(\"2021-04-10\")),                container_name = \"test_container\",                freezer_address = list(name = \"TBD\",                                       level_I = \"TBD\",                                       level_II = \"seve's working basket\")) }"},{"path":"https://eppicenter.github.io/sampleDB/reference/cryovial_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Cryovial NA — cryovial_na","title":"Cryovial NA — cryovial_na","text":"example upload file single Cryovial sample using NA file format","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/cryovial_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cryovial NA — cryovial_na","text":"","code":"cryovial_na"},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/reference/cryovial_na.html","id":"micronix-na","dir":"Reference","previous_headings":"","what":"micronix_na","title":"Cryovial NA — cryovial_na","text":"data frame 1 rows 13 columns: Barcode 10 digit unique identifier sample BoxRow character denoting row position sample BoxColumn integer denoting column position sample SpecimenType specimen contained sample StudySubject identifier study subject sample collected CollectionDate date sample collected. field required sample part longitudinal study, MUST YYYY-MM-DD format BoxName name plate FreezerName name freezer sample RackNumber shelf sample located RackPosition place shelf sample located StudyCode code associated study sample part Comment optional field leave comment sample BoxBarcode optional field provide barcode container sample located ","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/cryovial_na.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cryovial NA — cryovial_na","text":"EPPIcenter","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/micronix_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Micronix NA — micronix_na","title":"Micronix NA — micronix_na","text":"example upload file single Micronix sample using NA file format","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/micronix_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Micronix NA — micronix_na","text":"","code":"micronix_na"},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB/reference/micronix_na.html","id":"micronix-na","dir":"Reference","previous_headings":"","what":"micronix_na","title":"Micronix NA — micronix_na","text":"data frame 1 rows 13 columns: Barcode 10 digit unique identifier sample Row character denoting row position sample Column integer denoting column position sample StudyCode code associated study sample part StudySubject identifier study subject sample collected SpecimenType specimen contained sample PlateName name plate FreezerName name freezer sample ShelfName shelf sample located BasketName place shelf sample located CollectionDate date sample collected. field required sample part longitudinal study, MUST YYYY-MM-DD format Comment optional field leave comment sample PlateBarcode optional field provide barcode container sample located ","code":""},{"path":"https://eppicenter.github.io/sampleDB/reference/micronix_na.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Micronix NA — micronix_na","text":"EPPIcenter","code":""}]
