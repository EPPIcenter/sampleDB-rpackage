[{"path":"https://eppicenter.github.io/sampleDB-rpackage/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 sampleDB authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Severiano Villarruel. Author, maintainer.","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Villarruel S (2022). sampleDB: Organization EPPIcenter Wetlab Samples. R package version 0.0.0.9000, https://eppicenter.github.io/sampleDB-rpackage/.","code":"@Manual{,   title = {sampleDB: Organization for EPPIcenter Wetlab Samples},   author = {Severiano Villarruel},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://eppicenter.github.io/sampleDB-rpackage/}, }"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/index.html","id":"overview","dir":"","previous_headings":"","what":"Organization for EPPIcenter Wetlab Samples","title":"Organization for EPPIcenter Wetlab Samples","text":"SampleDB Management System Wet Lab Samples. can used track sample’s storage address metadata. SampleDB installed R package accessible via RShiny web app.","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/index.html","id":"running-sampledb","dir":"","previous_headings":"","what":"Running SampleDB","title":"Organization for EPPIcenter Wetlab Samples","text":"minimal installation setup SampleDB can accessed url: http://<ip address>:3838/sampleDB/ Uniquely Barcoded Samples Linux Server R >= 4.0 ","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Organization for EPPIcenter Wetlab Samples","text":"install SampleDB run command R instance:","code":"withr::with_libpaths(new = \"/usr/lib/R/site-library/\",                       devtools::install_github(\"https://github.com/EPPIcenter/sampleDB-rpackage\",                                                ref = \"master\",                                                auth_token = \"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\"))"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/index.html","id":"set-up","dir":"","previous_headings":"","what":"Set Up","title":"Organization for EPPIcenter Wetlab Samples","text":"set SampleDB run command . prompted carry setup.","code":"library(sampleDB) SampleDB_Setup()"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/index.html","id":"database-schema","dir":"","previous_headings":"","what":"Database Schema","title":"Organization for EPPIcenter Wetlab Samples","text":"SampleDB v2","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/index.html","id":"backups","dir":"","previous_headings":"","what":"Backups","title":"Organization for EPPIcenter Wetlab Samples","text":"SampleDB backed every Sunday Mines using /opt/sample_db/sample_db_backup.sh crontab.","code":""},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/ArchiveAndDeleteSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"","code":"ArchiveAndDeleteSamples(operation, sample_id, verification = TRUE)"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/ArchiveAndDeleteSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"operation string specifying type operation perform. Valid operations archive delete. archive used delete external data sample (tube/paper/rdt information, container information, storage location) preserve internal data (sample id, specimen information, study subject information). operation can used example micronix tube emptied rancid needs discarded. delete used remove traces sample (internal external data). Deletions recursive sense sample ids associated samples entire box deleted box automatically deleted. sample_id numeric vector one sample IDs (also referred storage container IDs). Can accessed using sampleDB::SearchSamples(). verification logical value. set TRUE user verification operation required. set false user verification bypassed. Default set TRUE.","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/ArchiveAndDeleteSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Archive and Delete Wetlab EPPIcenter Samples — ArchiveAndDeleteSamples","text":"","code":"if (FALSE) { ArchiveAndDeleteSamples(operation = \"delete\", sample_id = c(7:10)) ArchiveAndDeleteSamples(operation = \"archive\", sample_id = 100) }"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/DeleteEmptyContainer.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Empty Wetlab Containers in the EPPIcenter SampleDB database — DeleteEmptyContainer","title":"Delete Empty Wetlab Containers in the EPPIcenter SampleDB database — DeleteEmptyContainer","text":"Delete Empty Wetlab Containers EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/DeleteEmptyContainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Empty Wetlab Containers in the EPPIcenter SampleDB database — DeleteEmptyContainer","text":"","code":"DeleteEmptyContainer(database, type, container_name)"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/MoveContainers.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","title":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","text":"Move Wetlab Containers EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/MoveContainers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","text":"","code":"MoveContainers(sample_type, container_name, freezer)"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/MoveContainers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Wetlab Containers in the EPPIcenter SampleDB database — MoveContainers","text":"sample_type string specifying type samples moved. Options include: micronix, cryovial, rdt paper container_name vector specifying name container moved freezer list specifying vector location_name, level_I, /orlevel_II","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/MoveSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Wetlab Samples in the EPPIcenter sampleDB database — MoveSamples","title":"Move Wetlab Samples in the EPPIcenter sampleDB database — MoveSamples","text":"MoveSamples() can used move existing wetlab samples : two () existing containers one () existing container one () existing container","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/MoveSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Wetlab Samples in the EPPIcenter sampleDB database — MoveSamples","text":"","code":"MoveSamples(sample_type, move_data)"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/MoveSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Wetlab Samples in the EPPIcenter sampleDB database — MoveSamples","text":"sample_type string specifying type samples moved. Options include: micronix, cryovial, rdt paper move_data list SampleDB move dataframes, name dataframe item container samples move. structure move file shown .","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/MoveSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move Wetlab Samples in the EPPIcenter sampleDB database — MoveSamples","text":"","code":"if (FALSE) { move_data <- list(\"move_csv1_container_name\" = dataframe(), \"move_csv2_container_name\" = dataframe()) MoveSamples(sample_type = \"micronix\", move_data = move_data) }"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/RenameContainers.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","title":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","text":"Rename Wetlab Containers EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/RenameContainers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","text":"","code":"RenameContainers(sample_type, container_name, freezer)"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/RenameContainers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Wetlab Containers in the EPPIcenter SampleDB database — RenameContainers","text":"sample_type string specifying type samples moved. Options include: micronix, cryovial, rdt paper current_container_name vector specifying name container moved new_container_name vector specifying name container moved","code":""},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/Run_SampleDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sampleDB as a R Shiny App — Run_SampleDB","text":"","code":"Run_SampleDB()"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/Run_SampleDB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sampleDB as a R Shiny App — Run_SampleDB","text":"","code":"if (FALSE) { RunSampleDB() }"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/SampleDB_Setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup SampleDB Database — SampleDB_Setup","title":"Setup SampleDB Database — SampleDB_Setup","text":"Save SampleDB's database file specified location","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/SampleDB_Setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup SampleDB Database — SampleDB_Setup","text":"","code":"SampleDB_Setup()"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/SampleDB_Setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setup SampleDB Database — SampleDB_Setup","text":"","code":"if (FALSE) { library(sampleDB) SampleDB_Setup() }"},{"path":[]},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/SearchSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"","code":"SearchSamples(   sample_type = NULL,   sample_label = NULL,   container_name = NULL,   study_subject = NULL,   specimen_type = NULL,   study = NULL,   collection_dates = NULL,   archived = NULL,   freezer = NULL,   study_subject.file = FALSE,   return_sample_ids = FALSE )"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/SearchSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"sample_type string specifying type EPPIcenter sample. (micronix, cryovile, rdt /paper) sample_label list vectors specifying vector micronix, cryovile, rdt, paper label names (micronix.label_name, cryovile.label_name, rdt.label_name /paper.label_name) container_name list vectors specifying vector micronix, cryovile, rdt, paper container names (micronix.container_name, cryovile.container_name, rdt.container_name /paper.container_name) study_subject study subjects string vector study subject strings. study_subject.file TRUE path .csv file containing one column named study_subject can uploaded used search database study subjects. specimen_type specimen type string vector specimen type strings. study study short code string vector study short code strings. collection_dates list date values strings (date.date.) can used filter EPPIcenter samples archived logical value. TRUE filters archived samples FALSE filters active samples freezer list specifying vector location_name, level_I, /orlevel_II study_subject.file logical value.  Setting study_subject.file TRUE allows user search study subjects using .csv file. Setting study_subject.file FALSE specifies user searches study subjects using either string vector strings. Default value FALSE. return_sample_ids logical value. Setting return_sample_ids TRUE means SearchSamples returns sample ids well search results. Setting return_sample_ids FALSE means SearchSamples returns search results. Default value FALSE.","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/SearchSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for Wetlab Samples in the EPPIcenter SampleDB database — SearchSamples","text":"","code":"if (FALSE) { SearchSamples(study = \"KAM06\", study_subject = \"subject_1\") }"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/UpdateReferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Update References in the EPPIcenter SampleDB database — UpdateReferences","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"Update References EPPIcenter SampleDB database","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/UpdateReferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"","code":"UpdateReferences(reference, operation, identifier = NULL, update = NULL)"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/UpdateReferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"reference string specifying type EPPIcenter reference (freezer, specimen_type, study). operation string specifying type update operation perform (add, modify, delete). identifier reference-specific list identifies reference item updated. reference freezer identifier list must include: freezer_name: string specifying freezer name freezer_levelI: string specifying freezer levelI name freezer_levelII: string specifying freezer levelII name reference specimen_type identifier list must include: specimen_type_name: string specifying specimen type name reference study identifier list must include: study_short_code: string specifying study short code update reference-specific list contains reference update information reference freezer update, add operations list must include: freezer_name: string specifying freezer name freezer_type: string specifying freezer type freezer_levelI: string specifying freezer levelI name freezer_levelII: string specifying freezer levelII name reference specimen_type update, add operations list must include: specimen_type_name: string specifying specimen type name reference study update, add operations list must include: study_title: string specifying study title study_description: string specifying study description study_short_code: string specifying study short code study_lead_person: string specifying study lead person study_longitudinal: logical value. TRUE study longitudinal FALSE study longitudinal modify operations update items optional","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/UpdateReferences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update References in the EPPIcenter SampleDB database — UpdateReferences","text":"","code":"if (FALSE) { UpdateReferences(reference = \"freezer\", operation = \"add\", update = list(freezer_name = \"Ruth\", freezer_type = \"-80\", freezer_levelI = \"rack1\", freezer_levelII = \"position_C1\")) }"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/UploadSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload EPPIcenter Wetlab Samples to the SampleDB database — UploadSamples","title":"Upload EPPIcenter Wetlab Samples to the SampleDB database — UploadSamples","text":"UploadSamples() can used upload wetlab samples sampleDB database. Currently type wetlab samples supported micronix. <!---cryovial`, `rdt` `paper` sample uploads appear next version.-->","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/UploadSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload EPPIcenter Wetlab Samples to the SampleDB database — UploadSamples","text":"","code":"UploadSamples(   sample_type,   upload_data,   container_name,   container_barcode = NULL,   freezer_address )"},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/UploadSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload EPPIcenter Wetlab Samples to the SampleDB database — UploadSamples","text":"sample_type string specifying type samples uploaded Options include: micronix, cryovial, rdt paper upload_data dataframe SampleDB Upload data. Required upload_data columns :well_position: row column sample storage housing label: sample's label barcode study_subject_id: participant id subject cohort (ie study) study_short_code: code study specimen_type: sample type collection_date: (optional) date sample first collected cohort participant #' upload data example without collection_date upload data example collection_date container_name string specifying name container samples . Names must unique within sample type. container_barcode string specifying barcode container samples . Container barcodes optional. Barcodes must unique within sample type. freezer_address list specifying freezer address used store samples.  Required items freezer_address list location_name, level_I level_II. freezer_address type minus eighty level_I level_II items specify rack position, respecively. freezer_address type minus twenty level_I level_II items specify shelf basket, respecively.","code":""},{"path":"https://eppicenter.github.io/sampleDB-rpackage/reference/UploadSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload EPPIcenter Wetlab Samples to the SampleDB database — UploadSamples","text":"","code":"if (FALSE) { UploadSamples(sample_type = \"micronix\",                upload_data = tibble(well_position = c(\"A0\"),                                    label = c(\"XXX 1\"),                                    study_subject_id = c(\"1\"),                                    specimen_type = c(\"PLASMA\"),                                    study_short_code = c(\"KAM06\"),                                    collection_date = c(\"2021-04-10\")),                container_name = \"test_container\",                 freezer_address = list(location_name = \"TBD\",                                       level_I = \"TBD\",                                       level_II = \"seve's working basket\")) }"}]
