% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ProcessCSV.R
\name{process_specimen_csv}
\alias{process_specimen_csv}
\title{Process and Validate Specimen User CSV File}
\usage{
process_specimen_csv(
  user_csv,
  user_action,
  sample_type,
  container_name = NULL,
  freezer_address = NULL,
  file_type = "na",
  database = Sys.getenv("SDB_PATH"),
  config_yml = Sys.getenv("SDB_CONFIG")
)
}
\arguments{
\item{user_csv}{The path to the user's specimen CSV file. This will be read into a data frame.}

\item{user_action}{A character string indicating the action the user is taking with the specimen data (e.g., 'upload').}

\item{sample_type}{A character string specifying the type of specimens in the user CSV.}

\item{container_name}{(Optional) A character string specifying the name of the specimen container. If provided and not present in the CSV, it will be added to each row.}

\item{freezer_address}{(Optional) A list of attributes for the specimen freezer. If provided and any attributes are missing from the CSV, they will be added to each row.}

\item{file_type}{A character string indicating the type of file (default is "na").}

\item{database}{A character string indicating the path to the SQLite database used for specimen validation checks. Defaults to the system environment variable 'SDB_PATH'.}

\item{config_yml}{A character string indicating the path to a configuration YAML file for specimens. Defaults to the system environment variable 'SDB_CONFIG'.}
}
\value{
A processed and validated user specimen CSV as a data frame.
}
\description{
This function processes and validates a user's specimen CSV file to ensure it meets
the requirements for a specific action. The process includes reading the file, preprocessing,
validation, and formatting of the specimens. If the file doesn't meet the specified requirements
for specimens, an error is thrown.
}
\examples{
\dontrun{
# Provide the path to the user specimen CSV file and action details
user_file_path <- "path/to/user/specimen/file.csv"
action <- "upload"
type <- "blood_sample"

# Process and validate the user specimen CSV
processed_csv <- process_specimen_csv(user_file_path, action, type)
}
}
\seealso{
\code{\link{read_user_csv}}, \code{\link{preprocess_csv}},
\code{\link{validate_and_format_specimen_file}}, \code{\link{validate_specimens}}
}
